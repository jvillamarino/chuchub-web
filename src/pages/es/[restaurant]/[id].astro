---
import { changeLanguage, t } from "i18next";
import type { Restaurant } from "../../../models/restaurant.interface";
import Layout from "../../../layouts/Layout.astro";
import { RESTAURANT_ENDPOINT, removeWhiteSpace } from "common";
import Categories from "@components/Categories/Categories";
import { Icon } from "astro-icon";
import FavoriteButton from "@components/FilterComponents/FavoriteButton";
import SearchComponent from "@components/FilterComponents/SearchComponent";

changeLanguage("es");

export interface Props {
    restaurant: Restaurant;
}
export interface Params {
    id: string;
    restaurant: string;
}
export const prerender = true;
export async function getStaticPaths() {
    const restaurants: Restaurant[] = await fetch(RESTAURANT_ENDPOINT).then((res) => res.json());
    return restaurants.map((restaurant) => ({
        params: { restaurant: removeWhiteSpace(restaurant.name), id: restaurant.id },
        props: { restaurant },
    }));
}
const { restaurant, id: restaurantId }: Params = Astro.params as any as Params;
const { restaurant: restaurantProps } = Astro.props;
---

<Layout
    title={`${restaurant} - Chubchub`}
    description={`${t('common.restaurant')} - ${restaurant}`}
    favicon={restaurantProps.logo}
    imageCoverUrl={restaurantProps.image}
>
    <main class="main-page">
        <div class="main-container">
            <div class="container-header">
                <div class="header-logo">
                    <img
                        class="header-logo__image"
                        src={restaurantProps.logo}
                        alt={`${t('common.restaurant')} - ${restaurantProps.logo} Logo`}
                    />
                </div>
                <div class="header-texts">
                    <div class="flex gap-2 sm:gap-4 items-center">
                        <h1 class="header__title">{restaurantProps.name}</h1>
                        <FavoriteButton client:only="react" restaurant={restaurantProps!}>
                            <Icon name="ph:heart" class="text-[--lastGray] w-4 sm:w-6" />
                        </FavoriteButton>
                    </div>
                    <h1 class="header__subtitle">{t('common.fastfood')}</h1>
                    <div class="header-descriptive">
                        <div class="descriptive-rating">
                            <Icon name="ph:star-light" class="descriptive-rating__icon" />
                            <p class="descriptive-rating__text">
                                {restaurantProps.ratings.average} ({restaurantProps.ratings.total})
                            </p>
                        </div>
                        <div class="descriptive-rating">
                            <Icon
                                name="fluent:location-28-regular"
                                class="descriptive-rating__icon"
                            />
                            <p class="descriptive-rating__text">16km</p>
                        </div>
                    </div>
                </div>

                <div class="hidden md:flex flex-auto">
                    <SearchComponent client:only="react" inputPlaceholder={t('common.filterBy')}>
                        <Icon name="ion:search" class="text-[--lastGray] w-5" />
                    </SearchComponent>
                </div>
            </div>

            <div class="container-body">
                <div class="inline-block md:hidden mr-auto">
                    <SearchComponent client:only="react" inputPlaceholder={t('common.filterBy')}>
                        <Icon name="ion:search" class="text-[--lastGray] w-5" />
                    </SearchComponent>
                </div>
                <Categories {restaurantId} client:only="react" />
            </div>
        </div>
    </main>
</Layout>

<style>
    .main-page {
        @apply relative bg-white flex flex-auto min-h-full h-auto;
    }
    .main-container {
        @apply bg-white absolute min-h-full h-auto rounded-md -top-8 inset-x-0 mx-4 shadow-md flex flex-col gap-8;
    }

    .header-logo__image {
        @apply absolute bg-white -top-16 rounded-[14px] left-4;
        box-shadow: 4px 10px 1px 2px;
    }

    .container-header {
        @apply flex relative w-full gap-12;
    }

    .container-body {
        @apply flex flex-auto w-full p-4 flex-col gap-8;
    }
    .header-texts {
        @apply mt-4;
    }

    .header__title {
        @apply font-bold text-[--lastBlack] text-base sm:text-2xl md:text-4xl;
    }

    .header__subtitle {
        @apply text-[--lastGray] text-xs sm:text-base md:text-lg;
    }

    .header-descriptive {
        @apply flex flex-row gap-2 flex-wrap;
    }

    .descriptive-rating {
        @apply flex flex-row gap-1 items-center text-[--lastGray] text-xs sm:text-base;
    }
    .descriptive-rating__icon {
        @apply w-3 md:w-4;
    }

    .header-logo {
        @apply relative h-2 w-40;
    }
</style>
